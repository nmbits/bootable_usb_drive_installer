#!/bin/sh

SSROOT_CONF=/ssroot.conf
BTRFSROOT=/ssroot_tmpmnt
RSYNC_FLAGS="-axS --delete --exclude=$BTRFSROOT --exclude=$SSROOT_CONF"

if [ ! -f $SSROOT_CONF ]; then
    echo "$SSROOT_CONF not found" >&2
    exit 0
fi

. $SSROOT_CONF

if [ -z "$ROOT" ]; then
    exit 0
fi

if [ -z "$SUBVOL" ]; then
    exit 0
fi

if [ -z "$BASENAME" ]; then
    exit 0
fi

if [ -n "$DRYRUN" ]; then
    DRYRUN=echo
fi

if [ ! -e $BTRFSROOT ]; then
    mkdir $BTRFSROOT
    if [ $? -ne 0 ]; then
	exit 1
    fi
fi
if [ ! -d $BTRFSROOT ]; then
    exit 2
fi

mount -t btrfs -o SUBVOL=/ $ROOT $BTRFSROOT
if [ $? -ne 0 ]; then
    exit 3
fi

for x in `btrfs subvolume list -o $BTRFSROOT | cut -d " " -f 9`; do
    num=`echo -n $x | sed -r "s/^$BASENAME.([0-9]+)$/\1/"`
    if [ -n "$num" -a "$num" != "$x" ]; then
	if [ -z "$max" ]; then
	    max=$num
	elif [ $num -gt $max ]; then
	    max=$num
	fi
    fi
done

if [ -z "$max" ]; then
    SUBVOLSS=$BTRFSROOT/${BASENAME}.0
else
    SUBVOLSS=$BTRFSROOT/${BASENAME}.$(expr $max + 1)
fi
SUBVOL=$BTRFSROOT/$SUBVOL

tmp=0
while [ -e ${SUBVOLSS}.${tmp} ]; do
    tmp=`expr $tmp + 1`
done
SUBVOLSS_TMP=${SUBVOLSS}.${tmp}

$DRYRUN btrfs subvolume snapshot $SUBVOL $SUBVOLSS_TMP
if [ $? -ne 0 ]; then
    exit 5
fi

$DRYRUN rsync $RSYNC_FLAGS / $SUBVOLSS_TMP
if [ $? -ne 0 ]; then
    exit 6
fi

$DRYRUN mv $SUBVOLSS_TMP $SUBVOLSS
umount $BTRFSROOT

exit 0
